{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./app.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./app.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterOutlet } from '@angular/router';\n/**\n * @descripcion\n * Componente principal\n *\n * Despliega menu y login\n * Permite recuperar contraseña detallando el email del usaurio\n * Usuario de admin por defecto: nathanbernal@gmail.com / 123.\n * Se utilzan los estlos por default de bootstrap.\n *\n */\n/**\n *\n * @usageNotes\n *\n * Importa módulos para despliegue de vista\n * Implementa funciones para capturar la navegación\n * Enruta a cada vista.\n */\nlet AppComponent = class AppComponent {\n  router;\n  title = \"Cloudent\";\n  isSessionCurrent = false;\n  isResponsive = false;\n  msg = '';\n  constructor(router) {\n    this.router = router;\n    console.log(\"Session  \" + this.isSessionCurrent);\n    if (localStorage.getItem('session')?.valueOf == undefined) {\n      this.router.navigate(['login']);\n    }\n  }\n  toggleMenu() {\n    this.isResponsive = !this.isResponsive;\n  }\n  goSalir() {\n    this.isSessionCurrent = false;\n    localStorage.removeItem('session');\n    this.router.navigate(['login']);\n  }\n  goPacientes() {\n    this.isSessionCurrent = localStorage.getItem('session') != undefined;\n    if (this.isSessionCurrent) {\n      this.router.navigate(['pacientes']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n  goAgenda() {\n    this.isSessionCurrent = localStorage.getItem('session') != undefined;\n    if (this.isSessionCurrent) {\n      this.router.navigate(['agenda']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n  goTratamientos() {\n    this.isSessionCurrent = localStorage.getItem('session') != undefined;\n    if (this.isSessionCurrent) {\n      this.router.navigate(['tratamientos']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n  goUsuarios() {\n    this.isSessionCurrent = localStorage.getItem('session') != undefined;\n    console.log(\"Sesion \" + this.isSessionCurrent);\n    if (this.isSessionCurrent) {\n      this.router.navigate(['usuarios']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }];\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule, FormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["CommonModule","Component","FormsModule","Router","RouterOutlet","AppComponent","router","title","isSessionCurrent","isResponsive","msg","constructor","console","log","localStorage","getItem","valueOf","undefined","navigate","toggleMenu","goSalir","removeItem","goPacientes","alert","goAgenda","goTratamientos","goUsuarios","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/jonathanbernal/Projects/Duoc/fullstack_2/duoc_cloudent-3.0.0/src/app/app.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { BootstrapOptions, Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterOutlet } from '@angular/router';\n\n/**\n * @descripcion\n * Componente principal\n * \n * Despliega menu y login\n * Permite recuperar contraseña detallando el email del usaurio\n * Usuario de admin por defecto: nathanbernal@gmail.com / 123.\n * Se utilzan los estlos por default de bootstrap.\n *\n */\n\n/**\n * \n * @usageNotes\n * \n * Importa módulos para despliegue de vista\n * Implementa funciones para capturar la navegación \n * Enruta a cada vista.\n */\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CommonModule, FormsModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\n\nexport class AppComponent {\n\n  title = \"Cloudent\";\n  isSessionCurrent: boolean = false;\n  isResponsive: boolean = false;\n  msg: string = '';\n  \n  constructor(private router: Router) {\n    console.log(\"Session  \"+this.isSessionCurrent);\n    if (localStorage.getItem('session')?.valueOf == undefined) {\n      this.router.navigate(['login']);\n    }\n  }\n\n  toggleMenu(): void {\n    this.isResponsive = !this.isResponsive;\n  }\n\n  goSalir(): void {\n    this.isSessionCurrent = false;\n    localStorage.removeItem('session');\n    this.router.navigate(['login']);\n  }\n\n  goPacientes(): void {\n    this.isSessionCurrent = localStorage.getItem('session')!=undefined\n    if (this.isSessionCurrent) {\n      this.router.navigate(['pacientes']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n\n  goAgenda(): void {\n    this.isSessionCurrent = localStorage.getItem('session')!=undefined\n    if (this.isSessionCurrent) {\n      this.router.navigate(['agenda']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n\n  goTratamientos(): void {\n    this.isSessionCurrent = localStorage.getItem('session')!=undefined\n    if (this.isSessionCurrent) {\n      this.router.navigate(['tratamientos']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n\n  goUsuarios(): void {\n    this.isSessionCurrent = localStorage.getItem('session')!=undefined\n    console.log(\"Sesion \"+this.isSessionCurrent);\n    if (this.isSessionCurrent) {\n      this.router.navigate(['usuarios']);\n    } else {\n      alert('No se ha iniciado una sesión de usuario para proceder con el módulo seleccionado.');\n    }\n  }\n\n}\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAA2BC,SAAS,QAAQ,eAAe;AAC3D,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,EAAEC,YAAY,QAAQ,iBAAiB;AAEtD;;;;;;;;;;AAWA;;;;;;;;AAkBO,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOHC,MAAA;EALpBC,KAAK,GAAG,UAAU;EAClBC,gBAAgB,GAAY,KAAK;EACjCC,YAAY,GAAY,KAAK;EAC7BC,GAAG,GAAW,EAAE;EAEhBC,YAAoBL,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IACxBM,OAAO,CAACC,GAAG,CAAC,WAAW,GAAC,IAAI,CAACL,gBAAgB,CAAC;IAC9C,IAAIM,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAEC,OAAO,IAAIC,SAAS,EAAE;MACzD,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC;EACF;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACV,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAW,OAAOA,CAAA;IACL,IAAI,CAACZ,gBAAgB,GAAG,KAAK;IAC7BM,YAAY,CAACO,UAAU,CAAC,SAAS,CAAC;IAClC,IAAI,CAACf,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAI,WAAWA,CAAA;IACT,IAAI,CAACd,gBAAgB,GAAGM,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAEE,SAAS;IAClE,IAAI,IAAI,CAACT,gBAAgB,EAAE;MACzB,IAAI,CAACF,MAAM,CAACY,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,MAAM;MACLK,KAAK,CAAC,mFAAmF,CAAC;IAC5F;EACF;EAEAC,QAAQA,CAAA;IACN,IAAI,CAAChB,gBAAgB,GAAGM,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAEE,SAAS;IAClE,IAAI,IAAI,CAACT,gBAAgB,EAAE;MACzB,IAAI,CAACF,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,MAAM;MACLK,KAAK,CAAC,mFAAmF,CAAC;IAC5F;EACF;EAEAE,cAAcA,CAAA;IACZ,IAAI,CAACjB,gBAAgB,GAAGM,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAEE,SAAS;IAClE,IAAI,IAAI,CAACT,gBAAgB,EAAE;MACzB,IAAI,CAACF,MAAM,CAACY,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IACxC,CAAC,MAAM;MACLK,KAAK,CAAC,mFAAmF,CAAC;IAC5F;EACF;EAEAG,UAAUA,CAAA;IACR,IAAI,CAAClB,gBAAgB,GAAGM,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAEE,SAAS;IAClEL,OAAO,CAACC,GAAG,CAAC,SAAS,GAAC,IAAI,CAACL,gBAAgB,CAAC;IAC5C,IAAI,IAAI,CAACA,gBAAgB,EAAE;MACzB,IAAI,CAACF,MAAM,CAACY,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC,MAAM;MACLK,KAAK,CAAC,mFAAmF,CAAC;IAC5F;EACF;;;;;AA3DWlB,YAAY,GAAAsB,UAAA,EARxB1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC1B,YAAY,EAAEJ,YAAY,EAAEE,WAAW,CAAC;EAClD6B,QAAA,EAAAC,oBAAmC;;CAEpC,CAAC,C,EAEW3B,YAAY,CA6DxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}