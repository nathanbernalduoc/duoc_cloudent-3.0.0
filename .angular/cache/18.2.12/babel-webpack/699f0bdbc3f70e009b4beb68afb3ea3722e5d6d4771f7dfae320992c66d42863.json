{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./agenda.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./agenda.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\n/**\n * @descripcion\n * Gestión de agenda\n *\n * Permite concretar la reserva de horas médicas\n*\n */\n/**\n *\n * @usageNotes\n *\n * Selección de fecga\n * Selección de hora\n * Selección de pacientes\n * Selección de tratamientos\n *\n **/\nlet AgendaComponent = class AgendaComponent {\n  router;\n  fb;\n  agenda = {};\n  agendas = [];\n  pacientes = [];\n  tratamientos = [];\n  agendaForm;\n  constructor(router, fb) {\n    this.router = router;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    console.log('Agendas');\n    this.agendaForm = this.fb.group({\n      fecha: ['', Validators.required],\n      hora: ['', Validators.required],\n      paciente: ['', Validators.required],\n      tratamiento: ['', Validators.required]\n    });\n    var pac = localStorage.getItem('pacientes');\n    if (pac != undefined) {\n      var list = JSON.parse(pac);\n      console.log(list);\n      for (var i = 0; i < list.length; i++) {\n        console.log(list[i].fecha);\n        var paciente = {\n          'rut': list[i].rut,\n          'nombres': list[i].nombres,\n          'apellidos': list[i].apellidos,\n          'direccion': list[i].direccion,\n          'telefono': list[i].telefono,\n          'email': list[i].email\n        };\n        this.pacientes.push(paciente);\n      }\n    }\n    var tra = localStorage.getItem('tratamientos');\n    if (tra != undefined) {\n      var list = JSON.parse(tra);\n      console.log(list);\n      for (var i = 0; i < list.length; i++) {\n        var tratamiento = {\n          'nombre': list[i].nombre,\n          'descripcion': list[i].descripcion,\n          'valor': list[i].valor\n        };\n        this.tratamientos.push(tratamiento);\n      }\n    }\n    var p = localStorage.getItem('agenda');\n    console.log(p);\n    if (p != undefined) {\n      var list = JSON.parse(p);\n      console.log(list);\n      for (var i = 0; i < list.length; i++) {\n        var agenda = {\n          'fecha': list[i].fecha,\n          'hora': list[i].hora,\n          'paciente': list[i].paciente,\n          'tratamiento': list[i].tratamiento\n        };\n        this.agendas.push(this.agendas);\n      }\n    }\n    console.log(this.agendas);\n  }\n  submitForm() {\n    if (!this.agendaForm.valid) {\n      alert('Revise los datos proporcionados, se han encontrado errores de validaciones.');\n    } else {\n      console.log('Guardando agenda.');\n      this.setAgenda();\n    }\n  }\n  setAgenda() {\n    var fecha = this.agendaForm.get('fecha').value;\n    var hora = this.agendaForm.get('hora').value;\n    var paciente = this.agendaForm.get('paciente').value;\n    var tratamiento = this.agendaForm.get('tratamiento').value;\n    this.agenda.fecha = fecha;\n    this.agenda.hora = hora;\n    this.agenda.paciente = paciente;\n    this.agenda.tratamiento = tratamiento;\n    this.agendas.push(this.agenda);\n    localStorage.setItem('agenda', JSON.stringify(this.agendas));\n  }\n  unsetAgenda(id) {\n    console.log('Quitando Agendas ' + id);\n    this.agendas.splice(id, 1);\n    localStorage.setItem('agendas', JSON.stringify(this.agendas));\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }, {\n    type: FormBuilder\n  }];\n};\nAgendaComponent = __decorate([Component({\n  selector: 'app-agenda',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AgendaComponent);\nexport { AgendaComponent };","map":{"version":3,"names":["Component","CommonModule","Router","FormBuilder","ReactiveFormsModule","Validators","AgendaComponent","router","fb","agenda","agendas","pacientes","tratamientos","agendaForm","constructor","ngOnInit","console","log","group","fecha","required","hora","paciente","tratamiento","pac","localStorage","getItem","undefined","list","JSON","parse","i","length","rut","nombres","apellidos","direccion","telefono","email","push","tra","nombre","descripcion","valor","p","submitForm","valid","alert","setAgenda","get","value","setItem","stringify","unsetAgenda","id","splice","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/jonathanbernal/Projects/Duoc/fullstack_2/duoc_cloudent-3.0.0/src/app/componentes/agenda/agenda.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { formatDate, CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\n\n\n/**\n * @descripcion\n * Gestión de agenda\n * \n * Permite concretar la reserva de horas médicas \n* \n */\n\n/**\n * \n * @usageNotes\n * \n * Selección de fecga\n * Selección de hora\n * Selección de pacientes\n * Selección de tratamientos\n *\n **/\n\n@Component({\n  selector: 'app-agenda',\n  standalone: true,\n  imports: [ CommonModule,ReactiveFormsModule],\n  templateUrl: './agenda.component.html',\n  styleUrl: './agenda.component.css'\n})\n\nexport class AgendaComponent {\n\n  agenda: any = {};\n  agendas: any[] = [];\n  pacientes: any[] = [];\n  tratamientos: any[] = [];\n  agendaForm!: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n\n    console.log('Agendas');\n\n    this.agendaForm = this.fb.group({\n      fecha: ['', Validators.required],\n      hora: ['', Validators.required],\n      paciente: ['', Validators.required],\n      tratamiento: ['', Validators.required],\n    });\n\n    var pac = localStorage.getItem('pacientes');\n    if (pac != undefined) {\n\n      var list = JSON.parse(pac);\n      console.log(list);\n      for(var i = 0; i<list.length; i++) {\n\n        console.log(list[i].fecha);\n        var paciente = { 'rut': list[i].rut, 'nombres': list[i].nombres, 'apellidos': list[i].apellidos, 'direccion': list[i].direccion, 'telefono': list[i].telefono, 'email': list[i].email};\n        this.pacientes.push(paciente);\n\n      }\n\n\n    }\n\n    var tra = localStorage.getItem('tratamientos');\n    if (tra != undefined) {\n\n      var list = JSON.parse(tra);\n      console.log(list);\n      for(var i = 0; i<list.length; i++) {\n\n        var tratamiento = { 'nombre': list[i].nombre, 'descripcion': list[i].descripcion, 'valor': list[i].valor };\n        this.tratamientos.push(tratamiento);\n\n      }\n\n\n    }\n\n    var p = localStorage.getItem('agenda');\n    console.log(p);\n\n    if (p != undefined) {\n\n      var list = JSON.parse(p);\n      console.log(list);\n      for(var i = 0; i<list.length; i++) {\n\n        var agenda = { 'fecha': list[i].fecha, 'hora': list[i].hora, 'paciente': list[i].paciente, 'tratamiento': list[i].tratamiento };\n        this.agendas.push(this.agendas);\n\n      }\n\n    }\n    console.log(this.agendas);\n\n  }\n\n  submitForm(): void {\n    if (!this.agendaForm.valid) {\n      alert('Revise los datos proporcionados, se han encontrado errores de validaciones.');\n    } else {\n      console.log('Guardando agenda.');\n      this.setAgenda();\n    }\n  }\n\n  setAgenda(): void {\n\n    var fecha = this.agendaForm.get('fecha')!.value;\n    var hora = this.agendaForm.get('hora')!.value;\n    var paciente = this.agendaForm.get('paciente')!.value;\n    var tratamiento = this.agendaForm.get('tratamiento')!.value;\n\n    this.agenda.fecha = fecha;\n    this.agenda.hora = hora;\n    this.agenda.paciente = paciente;\n    this.agenda.tratamiento = tratamiento;\n\n    this.agendas.push(this.agenda);\n\n    localStorage.setItem('agenda', JSON.stringify(this.agendas));\n\n  }\n\n  unsetAgenda(id: number): void {\n\n    console.log('Quitando Agendas '+id);\n\n    this.agendas.splice(id, 1);\n    localStorage.setItem('agendas', JSON.stringify(this.agendas));\n\n  } \n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}