{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./usuarios.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./usuarios.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UsuariosService } from '../../services/usuarios.service';\nimport { HttpClientModule } from '@angular/common/http';\n/**\n * @descripcion\n * Administración de usuarios\n *\n * Permite  mandener usuarios\n *\n */\n/**\n *\n * @usageNotes\n *\n * Agregar usuarios\n * Quitar usuarios\n * Usuarios almacenados en un arreglo temporal\n * La recuperación de contraseña se encuentra en el login, boton \"Recuperar contraseña\"\n */\nlet UsuariosComponent = class UsuariosComponent {\n  router;\n  fb;\n  jsonUsuarios;\n  usuario = {};\n  usuarios = [];\n  usuarioForm;\n  constructor(router, fb, jsonUsuarios) {\n    this.router = router;\n    this.fb = fb;\n    this.jsonUsuarios = jsonUsuarios;\n  }\n  ngOnInit() {\n    console.log('Usuarios');\n    this.usuarioForm = this.fb.group({\n      nombre: ['', Validators.required],\n      usuario: ['', Validators.required],\n      contrasena: ['', [Validators.required, Validators.pattern(/[0-9]/), Validators.pattern(/[A-Z]/), Validators.pattern(/[$#]/), Validators.minLength(6), Validators.maxLength(10)]],\n      rol: ['', Validators.required]\n    });\n    this.jsonUsuarios.getUsuarios().subscribe(data => {\n      console.log(data);\n      this.usuarios = data;\n    });\n  }\n  submitForm() {\n    if (!this.usuarioForm.valid) {\n      alert('Revise los datos proporcionados, se han encontrado errores de validaciones.');\n    } else {\n      console.log('Guardando usuario.');\n      this.setUsuario();\n    }\n  }\n  setUsuario() {\n    var nombre = this.usuarioForm.get('nombre').value;\n    var usuario = this.usuarioForm.get('usuario').value;\n    var contrasena = this.usuarioForm.get('contrasena').value;\n    var rol = this.usuarioForm.get('rol').value;\n    this.usuario.nombre = nombre;\n    this.usuario.usuario = usuario;\n    this.usuario.contrasena = contrasena;\n    this.usuario.rol = rol;\n    this.usuarios.push(this.usuario);\n    localStorage.setItem('usuarios', JSON.stringify(this.usuarios));\n  }\n  unsetUsuario(id) {\n    console.log('Quitando Usuarios ' + id);\n    this.usuarios.splice(id, 1);\n    localStorage.setItem('usuarios', JSON.stringify(this.usuarios));\n  }\n  static ctorParameters = () => [{\n    type: Router\n  }, {\n    type: FormBuilder\n  }, {\n    type: UsuariosService\n  }];\n};\nUsuariosComponent = __decorate([Component({\n  selector: 'app-usuarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule],\n  template: __NG_CLI_RESOURCE__0,\n  providers: [UsuariosService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], UsuariosComponent);\nexport { UsuariosComponent };","map":{"version":3,"names":["Component","CommonModule","Router","FormBuilder","ReactiveFormsModule","Validators","UsuariosService","HttpClientModule","UsuariosComponent","router","fb","jsonUsuarios","usuario","usuarios","usuarioForm","constructor","ngOnInit","console","log","group","nombre","required","contrasena","pattern","minLength","maxLength","rol","getUsuarios","subscribe","data","submitForm","valid","alert","setUsuario","get","value","push","localStorage","setItem","JSON","stringify","unsetUsuario","id","splice","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0","providers"],"sources":["/Users/jonathanbernal/Projects/Duoc/fullstack_2/duoc_cloudent-3.0.0/src/app/componentes/usuarios/usuarios.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { formatDate, CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UsuariosService } from '../../services/usuarios.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n/**\n * @descripcion\n * Administración de usuarios\n * \n * Permite  mandener usuarios\n * \n */\n\n/**\n * \n * @usageNotes\n * \n * Agregar usuarios\n * Quitar usuarios\n * Usuarios almacenados en un arreglo temporal\n * La recuperación de contraseña se encuentra en el login, boton \"Recuperar contraseña\"\n */\n\n@Component({\n  selector: 'app-usuarios',\n  standalone: true,\n  imports: [ CommonModule,ReactiveFormsModule, HttpClientModule],\n  templateUrl: './usuarios.component.html',\n  styleUrl: './usuarios.component.css',\n  providers: [UsuariosService]\n})\n\nexport class UsuariosComponent {\n\n  usuario: any = {};\n  usuarios: any[] = [];\n  usuarioForm!: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private jsonUsuarios: UsuariosService) {}\n\n  ngOnInit(): void {\n\n    console.log('Usuarios');\n\n    this.usuarioForm = this.fb.group({\n      nombre: ['', Validators.required],\n      usuario: ['', Validators.required],\n      contrasena: ['', [Validators.required, Validators.pattern(/[0-9]/), Validators.pattern(/[A-Z]/) , Validators.pattern(/[$#]/), Validators.minLength(6), Validators.maxLength(10)]],\n      rol: ['', Validators.required],\n    });\n\n    this.jsonUsuarios.getUsuarios().subscribe(\n      data=> {\n        console.log(data);\n        this.usuarios = data;\n      }\n    )\n\n  }\n\n  submitForm(): void {\n    if (!this.usuarioForm.valid) {\n      alert('Revise los datos proporcionados, se han encontrado errores de validaciones.');\n    } else {\n      console.log('Guardando usuario.');\n      this.setUsuario();\n    }\n  }\n\n  setUsuario(): void {\n\n    var nombre = this.usuarioForm.get('nombre')!.value;\n    var usuario = this.usuarioForm.get('usuario')!.value;\n    var contrasena = this.usuarioForm.get('contrasena')!.value;\n    var rol = this.usuarioForm.get('rol')!.value;\n\n    this.usuario.nombre = nombre;\n    this.usuario.usuario = usuario;\n    this.usuario.contrasena = contrasena;\n    this.usuario.rol = rol;\n\n    this.usuarios.push(this.usuario);\n\n    localStorage.setItem('usuarios', JSON.stringify(this.usuarios));\n\n  }\n\n  unsetUsuario(id: number): void {\n\n    console.log('Quitando Usuarios '+id);\n\n    this.usuarios.splice(id, 1);\n    localStorage.setItem('usuarios', JSON.stringify(this.usuarios));\n\n  } \n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}